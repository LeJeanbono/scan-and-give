{"version":3,"sources":["Done.js","Association.js","api.js","Associations.js","Scanner.js","Don.js","Dons.js","App.js","serviceWorker.js","index.js"],"names":["Done","react_default","a","createElement","Component","withStyles","Association","state","associations","classes","this","props","Card_default","className","card","CardMedia_default","cardImage","image","title","nom","CardContent_default","cardContent","Typography_default","gutterBottom","variant","component","dangerouslySetInnerHTML","__html","description","replace","CardActions_default","Button_default","size","color","Link","to","id","Icon_default","rightIcon","display","marginBottom","minHeight","height","width","backgroundSize","alignSelf","flexGrow","marginLeft","api","getAssociations","Promise","resolve","getDons","associationId","association","dons","Associations","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","then","setState","catch","error","console","log","map","src_Association","key","padding","backgroundColor","Scanner","videoRef","React","createRef","canvasRef","loading","videoDevices","donExist","sending","tick","analyzeVideoFrame","requestAnimationFrame","video","current","readyState","HAVE_ENOUGH_DATA","canvas","canvasContext","getContext","videoHeight","videoWidth","drawImage","imageData","getImageData","code","jsQR","data","inversionAttempts","addDon","objectHash","Date","parseInt","match","params","history","push","pathname","response","status","onEnumerateDevices","mediaDevices","filter","mediaDevice","kind","getAssociation","resume","handleClose","navigator","enumerateDevices","getUserMedia","deviceId","stream","srcObject","setAttribute","play","top","concat","left","transform","Modal_default","aria-labelledby","aria-describedby","open","onClose","modal","layout","ref","hidden","theme","alignItems","flexDirection","position","spacing","unit","palette","background","paper","boxShadow","shadows","Don","nombre","justifyContent","Dons","don","src_Don","App","BrowserRouter","basename","Route","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e3cc64b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core\";\r\n\r\nconst styles = () => ({\r\n});\r\n\r\nclass Done extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Merci d'avoir donn√©\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Done);","import React, { Component } from \"react\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst styles = () => ({\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 15,\r\n    minHeight: 200\r\n  },\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: \"contain\",\r\n    alignSelf: \"center\"\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  },\r\n  rightIcon: {\r\n    marginLeft: 8\r\n  }\r\n});\r\n\r\nclass Association extends Component {\r\n  state = {\r\n    associations: []\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardImage}\r\n          image={this.props.image}\r\n          title={this.props.nom}\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {this.props.nom}\r\n          </Typography>\r\n          <Typography\r\n            component=\"p\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: this.props.description.replace(/\\n/g, \"<br />\")\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to={\"/scanner/\" + this.props.id}\r\n          >\r\n            Soutenir\r\n            <Icon className={classes.rightIcon} color=\"primary\">\r\n              card_giftcard\r\n            </Icon>\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Association);\r\n","import axios from \"axios\";\r\n\r\n// Passer ce flag √† true pour mocker le serveur\r\nconst MOCKED = true;\r\n\r\nlet api;\r\n\r\nif (!MOCKED) {\r\n  api = {\r\n    getAssociations: () =>\r\n      axios.get(\"/api/associations\").then(response => response.data),\r\n    getAssociation: id =>\r\n      axios.get(\"/api/associations/\" + id).then(response => response.data),\r\n    addDon: (hash, date, associationId) =>\r\n      axios\r\n        .post(\"/api/dons\", JSON.stringify({ hash, date, associationId }), {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        })\r\n        .then(response => response.data),\r\n    getDons: () => axios.get(\"/api/dons\").then(response => response.data)\r\n  };\r\n} else {\r\n  api = {\r\n    getAssociations: () =>\r\n      Promise.resolve([\r\n        {\r\n          id: 1,\r\n          nom: \"Bretagne Vivante\",\r\n          image: \"logo_bretagnevivante.png\",\r\n          description:\r\n            \"Consciente de ne pouvoir agir seule, Bretagne Vivante initie et contribue √† de nombreux projets et d√©marches interassociatives, pour peser ensemble dans le d√©bat public.\\nPour faire avancer la prise en compte de la nature, nous d√©veloppons aussi de nombreux partenariats avec l‚ÄôEtat, les collectivit√©s, les entreprises, les √©coles, les agriculteurs, etc.\"\r\n        },\r\n        {\r\n          id: 2,\r\n          nom: \"APF France Handicap\",\r\n          image: \"apf.png\",\r\n          description:\r\n            \"APF France handicap propose, sur l‚Äôensemble du territoire national, tous les types d‚Äô√©tablissements et services pour accompagner l‚Äôinclusion de la personne en situation de handicap.\\nNous avons √† c≈ìur d‚Äôoffrir aux personnes des r√©ponses diversifi√©es, au plus pr√®s de leurs attentes.\\nNous privil√©gions un parcours inclusif pour tous, dans le respect des choix de vie de chacun.\"\r\n        },\r\n        {\r\n          id: 3,\r\n          nom: \"Action contre la Faim\",\r\n          image: \"action_contre_faim.png\",\r\n          description:\r\n            \"Action contre la Faim lutte contre la faim dans le monde. Sa mission est de sauver des vies en √©liminant la faim par la pr√©vention,\\nla d√©tection et le traitement de la sous-nutrition, en particulier pendant et apr√®s les situations d‚Äôurgence li√©es aux conflits et aux catastrophes naturelles.\"\r\n        }\r\n      ]),\r\n    getDons: () =>\r\n      Promise.resolve([\r\n        {\r\n          associationId: \"1\",\r\n          association: \"Bretagne Vivante\",\r\n          image: \"logo_bretagnevivante.png\",\r\n          dons: 1\r\n        },\r\n        {\r\n          associationId: \"2\",\r\n          association: \"APF France Handicap\",\r\n          image: \"apf.png\",\r\n          dons: 2\r\n        },\r\n        {\r\n          associationId: \"3\",\r\n          association: \"Action contre la Faim\",\r\n          image: \"action_contre_faim.png\",\r\n          dons: 1\r\n        }\r\n      ])\r\n  };\r\n}\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Association from \"./Association\";\r\nimport api from \"./api\";\r\n\r\nconst styles = () => ({\r\n  associations: {\r\n    padding: 15,\r\n    backgroundColor: \"#eeeeee\"\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 15,\r\n    minHeight: 200\r\n  },\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: \"contain\",\r\n    alignSelf: \"center\"\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nclass Associations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      associations: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    api\r\n      .getAssociations()\r\n      .then(associations => {\r\n        this.setState({ associations });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.associations}>\r\n        <Typography gutterBottom variant=\"h2\" component=\"h1\">\r\n          Associations\r\n        </Typography>\r\n        {this.state.associations.map(a => (\r\n          <Association\r\n            key={a.id}\r\n            id={a.id}\r\n            nom={a.nom}\r\n            image={a.image}\r\n            description={a.description}\r\n          />\r\n        ))}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to={\"/dons\"}\r\n        >\r\n          R√©sultats\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Associations);\r\n","import React, {Component} from \"react\";\r\nimport jsQR from \"jsqr\";\r\nimport api from \"./api\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport objectHash from 'object-hash';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst styles = theme => ({\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: 'contain',\r\n    alignSelf: 'center'\r\n  },\r\n  resume: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px'\r\n  },\r\n  layout: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  modal: {\r\n    position: \"absolute\",\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: `translate(-50%, -50%)`,\r\n  }\r\n});\r\n\r\nclass Scanner extends Component {\r\n  videoRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n  state = {\r\n    loading: true,\r\n    videoDevices: [],\r\n    association: null,\r\n    donExist: false,\r\n    sending: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    api.getAssociation(this.props.match.params.associationId).then(response => this.setState({association: response}));\r\n    navigator.mediaDevices.enumerateDevices().then(this.onEnumerateDevices);\r\n\r\n    //TODO ACY Select webcam : https://www.twilio.com/blog/2018/04/choosing-cameras-javascript-mediadevices-api.html\r\n\r\n    navigator.mediaDevices\r\n    // .getUserMedia({ video: { facingMode: \"environment\" } })\r\n      .getUserMedia({\r\n        video: {\r\n          deviceId:\r\n            \"23ccb9f41f9998e0fa16662561502eecfd3a8f0b50c3d5385ac2b66489f76d72\"\r\n        }\r\n      })\r\n      .then(stream => {\r\n        const video = this.videoRef.current;\r\n        video.srcObject = stream;\r\n        video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n        video.play();\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyzeVideoFrame();\r\n    requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  analyzeVideoFrame = () => {\r\n    const video = this.videoRef.current;\r\n    if (this.state.loading && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      const video = this.videoRef.current;\r\n      const canvas = this.canvasRef.current;\r\n      if (canvas !== null) {\r\n        const canvasContext = canvas.getContext(\"2d\");\r\n        canvas.height = video.videoHeight;\r\n        canvas.width = video.videoWidth;\r\n        canvasContext.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        const imageData = canvasContext.getImageData(\r\n          0,\r\n          0,\r\n          canvas.width,\r\n          canvas.height\r\n        );\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n          inversionAttempts: \"dontInvert\"\r\n        });\r\n        if (code && code.data && !this.state.donExist && !this.state.sending) {\r\n          this.setState({sending: true});\r\n          api\r\n            .addDon(objectHash(code.data), new Date(), parseInt(this.props.match.params.associationId))\r\n            .then(() => {\r\n              this.props.history.push({\r\n                pathname: '/done',\r\n              });\r\n            })\r\n            .catch(error => {\r\n              if (error.response.status === 400) {\r\n                this.setState({donExist: true})\r\n              }\r\n            });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onEnumerateDevices = mediaDevices => {\r\n    const videoDevices = mediaDevices.filter(\r\n      mediaDevice => mediaDevice.kind === \"videoinput\"\r\n    );\r\n    this.setState({videoDevices});\r\n  };\r\n\r\n  getAssociation = () => {\r\n    if (this.state.association) {\r\n      const {classes} = this.props;\r\n      return (\r\n        <div className={classes.resume}>\r\n          <CardMedia\r\n            className={classes.cardImage}\r\n            image={'/' + this.state.association.image}\r\n            title={this.state.association.nom}\r\n          />\r\n          <h1>{this.state.association.nom}</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (<div></div>);\r\n    }\r\n  };\r\n\r\n  getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({donExist: false});\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n          open={this.state.donExist}\r\n          onClose={this.handleClose}\r\n        >\r\n          <div className={classes.modal}>\r\n            <Icon color={\"error\"}>warning</Icon>\r\n            Vous avez d√©j√† donn√©\r\n          </div>\r\n        </Modal>\r\n        <div className={classes.layout}>\r\n          {this.getAssociation()}\r\n          <div>\r\n            <video ref={this.videoRef} hidden/>\r\n            <canvas ref={this.canvasRef} hidden={this.state.loading}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Scanner);","import React, { Component } from \"react\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = () => ({\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 15,\r\n    minHeight: 200\r\n  },\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: \"contain\",\r\n    alignSelf: \"center\"\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    justifyContent: \"center\"\r\n  },\r\n  rightIcon: {\r\n    marginLeft: 8\r\n  }\r\n});\r\nclass Don extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardImage}\r\n          image={this.props.image}\r\n          title={this.props.association}\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {this.props.association}\r\n          </Typography>\r\n          <Typography variant=\"h2\" component=\"h1\">\r\n            {this.props.nombre}‚Ç¨ gr√¢ce √† vous !\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Don);\r\n","import React, { Component } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Don from \"./Don\";\r\nimport api from \"./api\";\r\n\r\nclass Dons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dons: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    api\r\n      .getDons()\r\n      .then(dons => {\r\n        this.setState({ dons });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography gutterBottom variant=\"h2\" component=\"h1\">\r\n          Dons\r\n        </Typography>\r\n        {this.state.dons.map(don => (\r\n          <Don\r\n            key={don.associationId}\r\n            associationId={don.associationId}\r\n            association={don.association}\r\n            image={don.image}\r\n            nombre={don.dons}\r\n          />\r\n        ))}\r\n        <Button variant=\"contained\" color=\"primary\" component={Link} to={\"/\"}>\r\n          Associations\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dons;\r\n","import React, { Component } from \"react\";\r\nimport Done from \"./Done\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Associations from \"./Associations\";\r\nimport Scanner from \"./Scanner\";\r\nimport Dons from \"./Dons\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename=\"/scan-and-give\">\r\n        <div>\r\n          <Route exact path=\"/\" component={Associations} />\r\n          <Route path=\"/scanner/:associationId\" component={Scanner} />\r\n          <Route path=\"/done\" component={Done} />\r\n          <Route path=\"/dons\" component={Dons} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}