{"version":3,"sources":["Identite.js","Association.js","api.js","Associations.js","Scanner.js","App.js","serviceWorker.js","index.js"],"names":["Identite","state","lastname","firstname","company","email","ticketType","hash","this","props","history","location","code","replace","split","setState","react_default","a","createElement","Link","to","Component","Association","associations","classes","Card_default","className","card","CardMedia_default","cardImage","image","title","nom","CardContent_default","cardContent","Typography_default","gutterBottom","variant","component","dangerouslySetInnerHTML","__html","description","CardActions_default","Button_default","size","color","withStyles","display","marginBottom","minHeight","height","width","backgroundSize","alignSelf","flexGrow","api","getAssociations","Promise","resolve","id","Associations","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","then","catch","error","console","log","map","src_Association","key","padding","backgroundColor","Scanner","videoRef","React","createRef","canvasRef","loading","videoDevices","tick","analyzeVideoFrame","requestAnimationFrame","video","current","readyState","HAVE_ENOUGH_DATA","canvasWidth","videoWidth","canvasHeight","videoHeight","canvas","canvasContext","getContext","drawImage","imageData","getImageData","jsQR","data","inversionAttempts","push","pathname","drawLineAroundQRCode","isLeft","topLeftCorner","x","topRightCorner","isRight","isUp","y","bottomLeftCorner","isDown","drawLineOnCanvas","bottomRightCorner","begin","end","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","onEnumerateDevices","mediaDevices","filter","mediaDevice","kind","navigator","enumerateDevices","getUserMedia","deviceId","stream","srcObject","setAttribute","play","ref","hidden","App","BrowserRouter","Route","exact","path","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6819ac2e.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Identite extends Component {\r\n\r\n  state = {\r\n    lastname: '',\r\n    firstname: '',\r\n    company: '',\r\n    email: '',\r\n    ticketType: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const hash = this.props.history.location.state.code.replace(/\"/g, \"\").split(',');\r\n    this.setState({lastname: hash[0]});\r\n    this.setState({firstname: hash[1]});\r\n    this.setState({company: hash[2]});\r\n    this.setState({email: hash[3]});\r\n    this.setState({ticketType: hash[4]});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        Bonjour {this.state.lastname} {this.state.firstname}<br/>\r\n        de {this.state.company}<br/>\r\n        tu receveras par mail {this.state.email}<br/>\r\n        {this.state.ticketType}<br/>\r\n        C'est par <Link to=\"associations\">ici</Link> pour continuer\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Identite;","import React, {Component} from \"react\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst styles = () => ({\r\n  card: {\r\n    display: 'flex',\r\n    marginBottom: 15,\r\n    minHeight: 200\r\n  },\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: 'contain',\r\n    alignSelf: 'center'\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nclass Association extends Component {\r\n\r\n  state = {\r\n    associations: []\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardImage}\r\n          image={this.props.image}\r\n          title={this.props.nom}\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {this.props.nom}\r\n          </Typography>\r\n          <Typography component=\"p\" dangerouslySetInnerHTML={{ __html: this.props.description.replace(/\\n/g, '<br />')}}>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"large\" color=\"primary\" component={Link} to=\"/scanner\">\r\n            Soutenir\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Association);","import axios from \"axios\";\r\n\r\n// Passer ce flag à true pour mocker le serveur\r\nconst MOCKED = true;\r\n\r\nlet api;\r\n\r\nif (!MOCKED) {\r\n  api = {\r\n    getAssociations: () =>\r\n      axios.get(\"/api/associations\").then(response => response.data)\r\n  };\r\n} else {\r\n  api = {\r\n    getAssociations: () =>\r\n      Promise.resolve([\r\n        {\r\n          id: 1,\r\n          nom: \"Bretagne Vivante\",\r\n          image: \"logo_bretagnevivante.png\",\r\n          description:\r\n            \"Consciente de ne pouvoir agir seule, Bretagne Vivante initie et contribue à de nombreux projets et démarches interassociatives, pour peser ensemble dans le débat public.\\nPour faire avancer la prise en compte de la nature, nous développons aussi de nombreux partenariats avec l’Etat, les collectivités, les entreprises, les écoles, les agriculteurs, etc.\"\r\n        },\r\n        {\r\n          id: 2,\r\n          nom: \"APF France Handicap\",\r\n          image: \"apf.png\",\r\n          description:\r\n            \"APF France handicap propose, sur l’ensemble du territoire national, tous les types d’établissements et services pour accompagner l’inclusion de la personne en situation de handicap.\\nNous avons à cœur d’offrir aux personnes des réponses diversifiées, au plus près de leurs attentes.\\nNous privilégions un parcours inclusif pour tous, dans le respect des choix de vie de chacun.\"\r\n        },\r\n        {\r\n          id: 3,\r\n          nom: \"Action contre la Faim\",\r\n          image: \"action_contre_faim.png\",\r\n          description:\r\n            \"Action contre la Faim lutte contre la faim dans le monde. Sa mission est de sauver des vies en éliminant la faim par la prévention,\\nla détection et le traitement de la sous-nutrition, en particulier pendant et après les situations d’urgence liées aux conflits et aux catastrophes naturelles.\"\r\n        }\r\n      ])\r\n  };\r\n}\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Association from \"./Association\";\r\nimport api from \"./api\";\r\n\r\nconst styles = () => ({\r\n  associations: {\r\n    padding: 15,\r\n    backgroundColor: \"#eeeeee\"\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    marginBottom: 15,\r\n    minHeight: 200\r\n  },\r\n  cardImage: {\r\n    height: 180,\r\n    width: 450,\r\n    backgroundSize: \"contain\",\r\n    alignSelf: \"center\"\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1\r\n  }\r\n});\r\n\r\nclass Associations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      associations: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    api\r\n      .getAssociations()\r\n      .then(associations => {\r\n        this.setState({ associations });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.associations}>\r\n        <Typography gutterBottom variant=\"h2\" component=\"h1\">\r\n          Associations\r\n        </Typography>\r\n        {this.state.associations.map(a => (\r\n          <Association\r\n            key={a.id}\r\n            nom={a.nom}\r\n            image={a.image}\r\n            description={a.description}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Associations);\r\n","import React, {Component} from \"react\";\r\nimport jsQR from \"jsqr\";\r\n\r\nclass Scanner extends Component {\r\n  videoRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n  state = {\r\n    loading: true,\r\n    code: null,\r\n    videoDevices: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    navigator.mediaDevices.enumerateDevices().then(this.onEnumerateDevices);\r\n\r\n    //TODO ACY Select webcam : https://www.twilio.com/blog/2018/04/choosing-cameras-javascript-mediadevices-api.html\r\n\r\n    navigator.mediaDevices\r\n    // .getUserMedia({ video: { facingMode: \"environment\" } })\r\n      .getUserMedia({\r\n        video: {\r\n          deviceId:\r\n            \"23ccb9f41f9998e0fa16662561502eecfd3a8f0b50c3d5385ac2b66489f76d72\"\r\n        }\r\n      })\r\n      .then(stream => {\r\n        const video = this.videoRef.current;\r\n        video.srcObject = stream;\r\n        video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n        video.play();\r\n        requestAnimationFrame(this.tick);\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.state.loading) {\r\n      if (this.state.code) {\r\n        this.drawLineAroundQRCode(this.state.code);\r\n        // outputMessage.hidden = true;\r\n        // outputData.parentElement.hidden = false;\r\n        // outputData.innerText = code.data;\r\n      } else {\r\n        // outputMessage.hidden = false;\r\n        // outputData.parentElement.hidden = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyzeVideoFrame();\r\n    requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  analyzeVideoFrame = () => {\r\n    const video = this.videoRef.current;\r\n    if (this.state.loading && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n      this.setState({\r\n        loading: false,\r\n        canvasWidth: video.videoWidth,\r\n        canvasHeight: video.videoHeight\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      const video = this.videoRef.current;\r\n      const canvas = this.canvasRef.current;\r\n      if (canvas !== null) {\r\n        const canvasContext = canvas.getContext(\"2d\");\r\n        canvas.height = video.videoHeight;\r\n        canvas.width = video.videoWidth;\r\n        canvasContext.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        const imageData = canvasContext.getImageData(\r\n          0,\r\n          0,\r\n          canvas.width,\r\n          canvas.height\r\n        );\r\n        const code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n          inversionAttempts: \"dontInvert\"\r\n        });\r\n        this.setState({code});\r\n        if (code && code.data) {\r\n          this.props.history.push({\r\n            pathname: '/identite',\r\n            state: {code: code.data}\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  drawLineAroundQRCode = code => {\r\n    let color = \"#FF3B58\";\r\n    const isLeft =\r\n      code.location.topLeftCorner.x < this.state.canvasWidth / 2 &&\r\n      code.location.topRightCorner.x < this.state.canvasWidth / 2;\r\n    const isRight =\r\n      code.location.topLeftCorner.x > this.state.canvasWidth / 2 &&\r\n      code.location.topRightCorner.x > this.state.canvasWidth / 2;\r\n    const isUp =\r\n      code.location.topLeftCorner.y < this.state.canvasHeight / 2 &&\r\n      code.location.bottomLeftCorner.y < this.state.canvasHeight / 2;\r\n    const isDown =\r\n      code.location.topLeftCorner.y > this.state.canvasHeight / 2 &&\r\n      code.location.bottomLeftCorner.y > this.state.canvasHeight / 2;\r\n\r\n    if (isUp && isLeft) {\r\n      color = \"#00FF00\"; // GREEN\r\n    } else if (isUp && isRight) {\r\n      color = \"#0000FF\"; // BLUE\r\n    } else if (isDown && isLeft) {\r\n      color = \"#00FFFF\"; // JAUNE\r\n    } else if (isDown && isRight) {\r\n      color = \"#FFFF00\"; // CYAN\r\n    }\r\n\r\n    this.drawLineOnCanvas(\r\n      code.location.topLeftCorner,\r\n      code.location.topRightCorner,\r\n      color\r\n    );\r\n    this.drawLineOnCanvas(\r\n      code.location.topRightCorner,\r\n      code.location.bottomRightCorner,\r\n      color\r\n    );\r\n    this.drawLineOnCanvas(\r\n      code.location.bottomRightCorner,\r\n      code.location.bottomLeftCorner,\r\n      color\r\n    );\r\n    this.drawLineOnCanvas(\r\n      code.location.bottomLeftCorner,\r\n      code.location.topLeftCorner,\r\n      color\r\n    );\r\n  };\r\n\r\n  drawLineOnCanvas = (begin, end, color) => {\r\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\r\n    canvasContext.beginPath();\r\n    canvasContext.moveTo(begin.x, begin.y);\r\n    canvasContext.lineTo(end.x, end.y);\r\n    canvasContext.lineWidth = 4;\r\n    canvasContext.strokeStyle = color;\r\n    canvasContext.stroke();\r\n  };\r\n\r\n  onEnumerateDevices = mediaDevices => {\r\n    const videoDevices = mediaDevices.filter(\r\n      mediaDevice => mediaDevice.kind === \"videoinput\"\r\n    );\r\n    this.setState({videoDevices});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading && <p>Loading...</p>}\r\n        <p>{this.state.code ? this.state.code.data : \"Scan to give 1€\"}</p>\r\n        <video ref={this.videoRef} hidden/>\r\n        <canvas ref={this.canvasRef} hidden={this.state.loading}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scanner;","import React, { Component } from \"react\";\r\nimport Identite from \"./Identite\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Associations from \"./Associations\";\r\nimport Scanner from \"./Scanner\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route exact path=\"/\" component={Associations} />\r\n          <Route path=\"/scanner\" component={Scanner} />\r\n          <Route path=\"/identite\" component={Identite} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}